<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.5">
  <compounddef id="parsing__general_8c" kind="file">
    <compoundname>parsing_general.c</compoundname>
    <includes local="no">string.h</includes>
    <includes local="no">stdlib.h</includes>
    <includes refid="shell_8h" local="yes">shell.h</includes>
    <incdepgraph>
      <node id="710">
        <label>shell.h</label>
        <link refid="shell_8h"/>
      </node>
      <node id="709">
        <label>stdlib.h</label>
      </node>
      <node id="708">
        <label>string.h</label>
      </node>
      <node id="707">
        <label>parsing/parsing_general.c</label>
        <link refid="parsing_general.c"/>
        <childnode refid="708" relation="include">
        </childnode>
        <childnode refid="709" relation="include">
        </childnode>
        <childnode refid="710" relation="include">
        </childnode>
      </node>
    </incdepgraph>
      <sectiondef kind="func">
      <memberdef kind="function" id="parsing__general_8c_1a4d215aeab88defa9d98461ae58615688" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int is_sep_cmd</definition>
        <argsstring>(char *str, int i)</argsstring>
        <name>is_sep_cmd</name>
        <param>
          <type>char *</type>
          <declname>str</declname>
        </param>
        <param>
          <type>int</type>
          <declname>i</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/geiger_a/rendu/PSU_2014_42sh/parsing/parsing_general.c" line="15" column="1" bodyfile="/home/geiger_a/rendu/PSU_2014_42sh/parsing/parsing_general.c" bodystart="15" bodyend="26"/>
        <references refid="shell_8h_1a1a145470918f339fe655f978216c73e2">error_syntax_error</references>
        <referencedby refid="shell_8h_1ae9c51201cb3ad89b921d2f3576875ca4" compoundref="parsing__general_8c" startline="68" endline="94">parsing_general</referencedby>
      </memberdef>
      <memberdef kind="function" id="parsing__general_8c_1a8a47bb6cfcb5378a27b639793a995814" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="shell_8h_1afb1327cff317f4de2efd5a873ff849d7" kindref="member">t_cmds</ref> *</type>
        <definition>t_cmds* new_cmds</definition>
        <argsstring>(char *new_str, char sep)</argsstring>
        <name>new_cmds</name>
        <param>
          <type>char *</type>
          <declname>new_str</declname>
        </param>
        <param>
          <type>char</type>
          <declname>sep</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/geiger_a/rendu/PSU_2014_42sh/parsing/parsing_general.c" line="28" column="1" bodyfile="/home/geiger_a/rendu/PSU_2014_42sh/parsing/parsing_general.c" bodystart="28" bodyend="41"/>
        <references refid="parsing__pipe_8c_1ae16134c5a21e816f178cf67d66d44503" compoundref="parsing__pipe_8c" startline="53" endline="78">parsing_pipe</references>
        <references refid="structs__cmds_1a2f44b091be60ccdd664997eb163d2ff4" compoundref="shell_8h" startline="48">s_cmds::sep</references>
        <referencedby refid="parsing__general_8c_1a2d75753bac50088aa4b9be29314f98fc" compoundref="parsing__general_8c" startline="43" endline="59">add_cmds</referencedby>
      </memberdef>
      <memberdef kind="function" id="parsing__general_8c_1a2d75753bac50088aa4b9be29314f98fc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="shell_8h_1afb1327cff317f4de2efd5a873ff849d7" kindref="member">t_cmds</ref> *</type>
        <definition>t_cmds* add_cmds</definition>
        <argsstring>(char *new_str, t_cmds **cmds, t_cmds **tmp, char sep)</argsstring>
        <name>add_cmds</name>
        <param>
          <type>char *</type>
          <declname>new_str</declname>
        </param>
        <param>
          <type><ref refid="shell_8h_1afb1327cff317f4de2efd5a873ff849d7" kindref="member">t_cmds</ref> **</type>
          <declname>cmds</declname>
        </param>
        <param>
          <type><ref refid="shell_8h_1afb1327cff317f4de2efd5a873ff849d7" kindref="member">t_cmds</ref> **</type>
          <declname>tmp</declname>
        </param>
        <param>
          <type>char</type>
          <declname>sep</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/geiger_a/rendu/PSU_2014_42sh/parsing/parsing_general.c" line="43" column="1" bodyfile="/home/geiger_a/rendu/PSU_2014_42sh/parsing/parsing_general.c" bodystart="43" bodyend="59"/>
        <references refid="parsing__general_8c_1a8a47bb6cfcb5378a27b639793a995814" compoundref="parsing__general_8c" startline="28" endline="41">new_cmds</references>
        <references refid="structs__cmds_1a0025c4bc6dd26be6d05df24de3a1ae88" compoundref="shell_8h" startline="49">s_cmds::next</references>
        <referencedby refid="shell_8h_1ae9c51201cb3ad89b921d2f3576875ca4" compoundref="parsing__general_8c" startline="68" endline="94">parsing_general</referencedby>
      </memberdef>
      <memberdef kind="function" id="parsing__general_8c_1a8ce5b1616824e4b8ae78ddd79d8cfc5b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void go_next_cmds</definition>
        <argsstring>(char *str, int *i, int *i_save)</argsstring>
        <name>go_next_cmds</name>
        <param>
          <type>char *</type>
          <declname>str</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>i</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>i_save</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/geiger_a/rendu/PSU_2014_42sh/parsing/parsing_general.c" line="61" column="1" bodyfile="/home/geiger_a/rendu/PSU_2014_42sh/parsing/parsing_general.c" bodystart="61" bodyend="66"/>
        <referencedby refid="shell_8h_1ae9c51201cb3ad89b921d2f3576875ca4" compoundref="parsing__general_8c" startline="68" endline="94">parsing_general</referencedby>
      </memberdef>
      <memberdef kind="function" id="parsing__general_8c_1abcadffa198fad47ab7758691c6ad4883" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="shell_8h_1afb1327cff317f4de2efd5a873ff849d7" kindref="member">t_cmds</ref> *</type>
        <definition>t_cmds* parsing_general</definition>
        <argsstring>(char *str)</argsstring>
        <name>parsing_general</name>
        <param>
          <type>char *</type>
          <declname>str</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/geiger_a/rendu/PSU_2014_42sh/parsing/parsing_general.c" line="68" column="1" bodyfile="/home/geiger_a/rendu/PSU_2014_42sh/parsing/parsing_general.c" bodystart="68" bodyend="94"/>
        <references refid="parsing__general_8c_1a4d215aeab88defa9d98461ae58615688" compoundref="parsing__general_8c" startline="15" endline="26">is_sep_cmd</references>
        <references refid="parsing__general_8c_1a2d75753bac50088aa4b9be29314f98fc" compoundref="parsing__general_8c" startline="43" endline="59">add_cmds</references>
        <references refid="parsing__pipe_8c_1af2f9183740ca6c997f4137fe08c50ff5" compoundref="parsing__pipe_8c" startline="25" endline="34">calc_new_str</references>
        <references refid="parsing__general_8c_1a8ce5b1616824e4b8ae78ddd79d8cfc5b" compoundref="parsing__general_8c" startline="61" endline="66">go_next_cmds</references>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment">**<sp/>parsing_general.c<sp/>for<sp/>parsing_general.c<sp/>in<sp/>/home/bauer_a/rendu/PSU_2014_42sh</highlight></codeline>
<codeline lineno="3"><highlight class="comment">**<sp/></highlight></codeline>
<codeline lineno="4"><highlight class="comment">**<sp/>Made<sp/>by<sp/>Hugo<sp/>Bauer</highlight></codeline>
<codeline lineno="5"><highlight class="comment">**<sp/>Login<sp/><sp/><sp/>&lt;bauer_a@epitech.net&gt;</highlight></codeline>
<codeline lineno="6"><highlight class="comment">**<sp/></highlight></codeline>
<codeline lineno="7"><highlight class="comment">**<sp/>Started<sp/>on<sp/><sp/>Tue<sp/>Mar<sp/>31<sp/>17:21:19<sp/>2015<sp/>Hugo<sp/>Bauer</highlight></codeline>
<codeline lineno="8"><highlight class="comment">**<sp/>Last<sp/>update<sp/>Thu<sp/>May<sp/>21<sp/>16:56:56<sp/>2015<sp/>Hugo<sp/>Bauer</highlight></codeline>
<codeline lineno="9"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;string.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdlib.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="shell_8h" kindref="compound">shell.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight></codeline>
<codeline lineno="15" refid="parsing__general_8c_1a4d215aeab88defa9d98461ae58615688" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><ref refid="parsing__general_8c_1a4d215aeab88defa9d98461ae58615688" kindref="member">is_sep_cmd</ref>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*str,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i)</highlight></codeline>
<codeline lineno="16"><highlight class="normal">{</highlight></codeline>
<codeline lineno="17"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(str[i]<sp/>==<sp/></highlight><highlight class="charliteral">&apos;;&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="18"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(1);</highlight></codeline>
<codeline lineno="19"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!strncmp(str<sp/>+<sp/>i,<sp/></highlight><highlight class="stringliteral">&quot;&amp;&amp;&quot;</highlight><highlight class="normal">,<sp/>2)<sp/>||<sp/>!strncmp(str<sp/>+<sp/>i,<sp/></highlight><highlight class="stringliteral">&quot;||&quot;</highlight><highlight class="normal">,<sp/>2))</highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(strncmp(str<sp/>+<sp/>i,<sp/></highlight><highlight class="stringliteral">&quot;&amp;&amp;&amp;&quot;</highlight><highlight class="normal">,<sp/>3)<sp/>&amp;&amp;<sp/>strncmp(str<sp/>+<sp/>i,<sp/></highlight><highlight class="stringliteral">&quot;|||&quot;</highlight><highlight class="normal">,<sp/>3))</highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(1);</highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(<ref refid="shell_8h_1a1a145470918f339fe655f978216c73e2" kindref="member">error_syntax_error</ref>(-1));</highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(0);</highlight></codeline>
<codeline lineno="26"><highlight class="normal">}</highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight></codeline>
<codeline lineno="28" refid="parsing__general_8c_1a8a47bb6cfcb5378a27b639793a995814" refkind="member"><highlight class="normal"><ref refid="structs__cmds" kindref="compound">t_cmds</ref><sp/><sp/><sp/><sp/><sp/><sp/>*<ref refid="parsing__general_8c_1a8a47bb6cfcb5378a27b639793a995814" kindref="member">new_cmds</ref>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<ref refid="get__next__line_8c_1a43354ef027ff107d540fe9cd7b0aed1b" kindref="member">new_str</ref>,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>sep)</highlight></codeline>
<codeline lineno="29"><highlight class="normal">{</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><ref refid="structs__cmds" kindref="compound">t_cmds</ref><sp/><sp/><sp/><sp/>*</highlight><highlight class="keyword">new</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(new_str<sp/>==<sp/>NULL)</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(NULL);</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>=<sp/>malloc(</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="structs__cmds" kindref="compound">t_cmds</ref>)))<sp/>==<sp/>NULL)</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(NULL);</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((new-&gt;cmd<sp/>=<sp/><ref refid="parsing__pipe_8c_1ae16134c5a21e816f178cf67d66d44503" kindref="member">parsing_pipe</ref>(new_str))<sp/>==<sp/>NULL)</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(NULL);</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal">-&gt;<ref refid="structs__cmds_1a2f44b091be60ccdd664997eb163d2ff4" kindref="member">sep</ref><sp/>=<sp/>sep;</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal">-&gt;next<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">new</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="41"><highlight class="normal">}</highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight></codeline>
<codeline lineno="43" refid="parsing__general_8c_1a2d75753bac50088aa4b9be29314f98fc" refkind="member"><highlight class="normal"><ref refid="structs__cmds" kindref="compound">t_cmds</ref><sp/><sp/><sp/><sp/><sp/><sp/>*<ref refid="parsing__general_8c_1a2d75753bac50088aa4b9be29314f98fc" kindref="member">add_cmds</ref>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<ref refid="get__next__line_8c_1a43354ef027ff107d540fe9cd7b0aed1b" kindref="member">new_str</ref>,<sp/><ref refid="structs__cmds" kindref="compound">t_cmds</ref><sp/>**cmds,<sp/><ref refid="structs__cmds" kindref="compound">t_cmds</ref><sp/>**tmp,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>sep)</highlight></codeline>
<codeline lineno="44"><highlight class="normal">{</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(new_str<sp/>==<sp/>NULL)</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(NULL);</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(*cmds<sp/>==<sp/>NULL)</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((*cmds<sp/>=<sp/><ref refid="parsing__general_8c_1a8a47bb6cfcb5378a27b639793a995814" kindref="member">new_cmds</ref>(new_str,<sp/>sep))<sp/>==<sp/>NULL)</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(NULL);</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>(*cmds)-&gt;<ref refid="structs__cmds_1a0025c4bc6dd26be6d05df24de3a1ae88" kindref="member">next</ref><sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>*tmp<sp/>=<sp/>*cmds;</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(*tmp);</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(((*tmp)-&gt;next<sp/>=<sp/><ref refid="parsing__general_8c_1a8a47bb6cfcb5378a27b639793a995814" kindref="member">new_cmds</ref>(new_str,<sp/>sep))<sp/>==<sp/>NULL)</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(NULL);</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/>*tmp<sp/>=<sp/>(*tmp)-&gt;<ref refid="structs__cmds_1a0025c4bc6dd26be6d05df24de3a1ae88" kindref="member">next</ref>;</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(*cmds);</highlight></codeline>
<codeline lineno="59"><highlight class="normal">}</highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight></codeline>
<codeline lineno="61" refid="parsing__general_8c_1a8ce5b1616824e4b8ae78ddd79d8cfc5b" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="parsing__general_8c_1a8ce5b1616824e4b8ae78ddd79d8cfc5b" kindref="member">go_next_cmds</ref>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*str,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*i,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*i_save)</highlight></codeline>
<codeline lineno="62"><highlight class="normal">{</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/>*i_save<sp/>=<sp/>*i<sp/>+<sp/>1;</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(str[*i_save]<sp/>==<sp/></highlight><highlight class="charliteral">&apos;&amp;&apos;</highlight><highlight class="normal"><sp/>||<sp/>str[*i_save]<sp/>==<sp/></highlight><highlight class="charliteral">&apos;|&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/>*i_save<sp/>+=<sp/>1;</highlight></codeline>
<codeline lineno="66"><highlight class="normal">}</highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight></codeline>
<codeline lineno="68" refid="shell_8h_1ae9c51201cb3ad89b921d2f3576875ca4" refkind="member"><highlight class="normal"><ref refid="structs__cmds" kindref="compound">t_cmds</ref><sp/><sp/><sp/><sp/><sp/><sp/>*<ref refid="parsing__general_8c_1abcadffa198fad47ab7758691c6ad4883" kindref="member">parsing_general</ref>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*str)</highlight></codeline>
<codeline lineno="69"><highlight class="normal">{</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><ref refid="structs__cmds" kindref="compound">t_cmds</ref><sp/><sp/><sp/><sp/>*cmds;</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><ref refid="structs__cmds" kindref="compound">t_cmds</ref><sp/><sp/><sp/><sp/>*tmp;</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>i;</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>i_save;</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ret;</highlight></codeline>
<codeline lineno="75"><highlight class="normal"></highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/>i<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/>i_save<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/>cmds<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/>tmp<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(str[i]<sp/>!=<sp/></highlight><highlight class="charliteral">&apos;\0&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((ret<sp/>=<sp/><ref refid="parsing__general_8c_1a4d215aeab88defa9d98461ae58615688" kindref="member">is_sep_cmd</ref>(str,<sp/>i))<sp/>==<sp/>-1)</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(NULL);</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ret<sp/>&gt;<sp/>0)</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="parsing__general_8c_1a2d75753bac50088aa4b9be29314f98fc" kindref="member">add_cmds</ref>(<ref refid="parsing__pipe_8c_1af2f9183740ca6c997f4137fe08c50ff5" kindref="member">calc_new_str</ref>(str,<sp/>i,<sp/>i_save),</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;cmds,<sp/>&amp;tmp,<sp/>str[i])<sp/>==<sp/>NULL)</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(NULL);</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="parsing__general_8c_1a8ce5b1616824e4b8ae78ddd79d8cfc5b" kindref="member">go_next_cmds</ref>(str,<sp/>&amp;i,<sp/>&amp;i_save);</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>i++;</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(<ref refid="parsing__general_8c_1a2d75753bac50088aa4b9be29314f98fc" kindref="member">add_cmds</ref>(<ref refid="parsing__pipe_8c_1af2f9183740ca6c997f4137fe08c50ff5" kindref="member">calc_new_str</ref>(str,<sp/>i,<sp/>i_save),<sp/>&amp;cmds,<sp/>&amp;tmp,<sp/>str[i]));</highlight></codeline>
<codeline lineno="94"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="/home/geiger_a/rendu/PSU_2014_42sh/parsing/parsing_general.c"/>
  </compounddef>
</doxygen>
