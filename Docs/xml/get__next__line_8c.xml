<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.5">
  <compounddef id="get__next__line_8c" kind="file">
    <compoundname>get_next_line.c</compoundname>
    <includes local="no">string.h</includes>
    <includes local="no">unistd.h</includes>
    <includes local="no">stdlib.h</includes>
    <includes refid="get__next__line_8h" local="yes">get_next_line.h</includes>
    <includes refid="lib_8h" local="yes">lib.h</includes>
    <incdepgraph>
      <node id="640">
        <label>lib/my/get_next_line.c</label>
        <link refid="get_next_line.c"/>
        <childnode refid="641" relation="include">
        </childnode>
        <childnode refid="642" relation="include">
        </childnode>
        <childnode refid="643" relation="include">
        </childnode>
        <childnode refid="644" relation="include">
        </childnode>
        <childnode refid="645" relation="include">
        </childnode>
      </node>
      <node id="643">
        <label>stdlib.h</label>
      </node>
      <node id="645">
        <label>lib.h</label>
        <link refid="lib_8h"/>
      </node>
      <node id="641">
        <label>string.h</label>
      </node>
      <node id="642">
        <label>unistd.h</label>
      </node>
      <node id="644">
        <label>get_next_line.h</label>
        <link refid="get__next__line_8h"/>
      </node>
    </incdepgraph>
      <sectiondef kind="func">
      <memberdef kind="function" id="get__next__line_8c_1ab044b91a346486fe462ea0d5543325e5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>char *</type>
        <definition>char* my_read</definition>
        <argsstring>(int fd, char *str)</argsstring>
        <name>my_read</name>
        <param>
          <type>int</type>
          <declname>fd</declname>
        </param>
        <param>
          <type>char *</type>
          <declname>str</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/geiger_a/rendu/PSU_2014_42sh/lib/my/get_next_line.c" line="17" column="1" bodyfile="/home/geiger_a/rendu/PSU_2014_42sh/lib/my/get_next_line.c" bodystart="17" bodyend="35"/>
        <references refid="get__next__line_8h_1a6c7cd32e1bac137f05e4a752b4ad10af" compoundref="get__next__line_8h" startline="14">BUFF_SIZE</references>
        <references refid="my__strlen_8c_1ac7e9bd08d068851e31a5b6d408004638" compoundref="my__strlen_8c" startline="13" endline="23">my_strlen</references>
        <references refid="my__strncat_8c_1a3b24f5275c408c2de1bf77b90f87e35f" compoundref="my__strncat_8c" startline="13" endline="28">my_strncat</references>
        <referencedby refid="lib_8h_1a3cfe4ae03a0888aa2d78d5d8ed455580" compoundref="get__next__line_8c" startline="49" endline="70">get_next_line</referencedby>
      </memberdef>
      <memberdef kind="function" id="get__next__line_8c_1a43354ef027ff107d540fe9cd7b0aed1b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>char *</type>
        <definition>char* new_str</definition>
        <argsstring>(char *str, int *i, int j)</argsstring>
        <name>new_str</name>
        <param>
          <type>char *</type>
          <declname>str</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>i</declname>
        </param>
        <param>
          <type>int</type>
          <declname>j</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/geiger_a/rendu/PSU_2014_42sh/lib/my/get_next_line.c" line="37" column="1" bodyfile="/home/geiger_a/rendu/PSU_2014_42sh/lib/my/get_next_line.c" bodystart="37" bodyend="47"/>
        <referencedby refid="lib_8h_1a3cfe4ae03a0888aa2d78d5d8ed455580" compoundref="get__next__line_8c" startline="49" endline="70">get_next_line</referencedby>
        <referencedby refid="lib_8h_1a4548135c4f1cfcaeff31c8dabb3692d3" compoundref="my__strdup_8c" startline="14" endline="27">my_strdup</referencedby>
        <referencedby refid="lib_8h_1aa470a7e58967778144f7d737bf64c3e8" compoundref="my__strndup_8c" startline="14" endline="27">my_strndup</referencedby>
        <referencedby refid="shell_8h_1a327654aa7fc09df62ee320f55cc80de7" compoundref="parsing__pipe_8c" startline="25" endline="34">calc_new_str</referencedby>
      </memberdef>
      <memberdef kind="function" id="get__next__line_8c_1aed7a5e18848da190b01eb9e791c51824" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>char *</type>
        <definition>char* get_next_line</definition>
        <argsstring>(int fd)</argsstring>
        <name>get_next_line</name>
        <param>
          <type>int</type>
          <declname>fd</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/geiger_a/rendu/PSU_2014_42sh/lib/my/get_next_line.c" line="49" column="1" bodyfile="/home/geiger_a/rendu/PSU_2014_42sh/lib/my/get_next_line.c" bodystart="49" bodyend="70"/>
        <references refid="get__next__line_8c_1ab044b91a346486fe462ea0d5543325e5" compoundref="get__next__line_8c" startline="17" endline="35">my_read</references>
        <references refid="get__next__line_8c_1a43354ef027ff107d540fe9cd7b0aed1b" compoundref="get__next__line_8c" startline="37" endline="47">new_str</references>
        <references refid="my__strlen_8c_1ac7e9bd08d068851e31a5b6d408004638" compoundref="my__strlen_8c" startline="13" endline="23">my_strlen</references>
        <references refid="get__next__line_8c_1aed7a5e18848da190b01eb9e791c51824" compoundref="get__next__line_8c" startline="49" endline="70">get_next_line</references>
        <referencedby refid="lib_8h_1a3cfe4ae03a0888aa2d78d5d8ed455580" compoundref="get__next__line_8c" startline="49" endline="70">get_next_line</referencedby>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment">**<sp/>get_next_line.c<sp/>for<sp/>get_next_line<sp/>in<sp/>/home/bauer_a/get_next_line</highlight></codeline>
<codeline lineno="3"><highlight class="comment">**<sp/></highlight></codeline>
<codeline lineno="4"><highlight class="comment">**<sp/>Made<sp/>by<sp/>Hugo<sp/>Bauer</highlight></codeline>
<codeline lineno="5"><highlight class="comment">**<sp/>Login<sp/><sp/><sp/>&lt;bauer_a@epitech.net&gt;</highlight></codeline>
<codeline lineno="6"><highlight class="comment">**<sp/></highlight></codeline>
<codeline lineno="7"><highlight class="comment">**<sp/>Started<sp/>on<sp/><sp/>Thu<sp/>May<sp/>14<sp/>15:36:06<sp/>2015<sp/>Hugo<sp/>Bauer</highlight></codeline>
<codeline lineno="8"><highlight class="comment">**<sp/>Last<sp/>update<sp/>Sun<sp/>May<sp/>17<sp/>17:51:48<sp/>2015<sp/>Hugo<sp/>Bauer</highlight></codeline>
<codeline lineno="9"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;string.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;unistd.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdlib.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="get__next__line_8h" kindref="compound">get_next_line.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="lib_8h" kindref="compound">lib.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight></codeline>
<codeline lineno="17" refid="get__next__line_8c_1ab044b91a346486fe462ea0d5543325e5" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<ref refid="get__next__line_8c_1ab044b91a346486fe462ea0d5543325e5" kindref="member">my_read</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>fd,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*str)</highlight></codeline>
<codeline lineno="18"><highlight class="normal">{</highlight></codeline>
<codeline lineno="19"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>buff[<ref refid="get__next__line_8h_1a6c7cd32e1bac137f05e4a752b4ad10af" kindref="member">BUFF_SIZE</ref>];</highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>l;</highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/>buff[0]<sp/>=<sp/></highlight><highlight class="charliteral">&apos;\0&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(str<sp/>==<sp/>NULL)</highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((str<sp/>=<sp/>malloc(</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">)<sp/>*<sp/>1))<sp/>==<sp/>NULL)</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(NULL);</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>str[0]<sp/>=<sp/></highlight><highlight class="charliteral">&apos;\0&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((l<sp/>=<sp/>read(fd,<sp/>buff,<sp/><ref refid="get__next__line_8h_1a6c7cd32e1bac137f05e4a752b4ad10af" kindref="member">BUFF_SIZE</ref>))<sp/>&lt;=<sp/>0)</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(str);</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((str<sp/>=<sp/>realloc(str,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">)<sp/>*<sp/>(<ref refid="my__strlen_8c_1ac7e9bd08d068851e31a5b6d408004638" kindref="member">my_strlen</ref>(str)<sp/>+<sp/>l<sp/>+<sp/>1)))<sp/>==<sp/>NULL)</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(str);</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><ref refid="my__strncat_8c_1a3b24f5275c408c2de1bf77b90f87e35f" kindref="member">my_strncat</ref>(str,<sp/>buff,<sp/>l);</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(str);</highlight></codeline>
<codeline lineno="35"><highlight class="normal">}</highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight></codeline>
<codeline lineno="37" refid="get__next__line_8c_1a43354ef027ff107d540fe9cd7b0aed1b" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<ref refid="get__next__line_8c_1a43354ef027ff107d540fe9cd7b0aed1b" kindref="member">new_str</ref>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*str,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*i,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>j)</highlight></codeline>
<codeline lineno="38"><highlight class="normal">{</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>*</highlight><highlight class="keyword">new</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>=<sp/>malloc(</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">)<sp/>*<sp/>(j<sp/>-<sp/>*i<sp/>+<sp/>1)))<sp/>==<sp/>NULL)</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(NULL);</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal">[0]<sp/>=<sp/></highlight><highlight class="charliteral">&apos;\0&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/>strncat(</highlight><highlight class="keyword">new</highlight><highlight class="normal">,<sp/>str<sp/>+<sp/>*i,<sp/>j<sp/>-<sp/>*i);</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/>*i<sp/>=<sp/>j<sp/>+<sp/>1;</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">new</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="47"><highlight class="normal">}</highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight></codeline>
<codeline lineno="49" refid="lib_8h_1a3cfe4ae03a0888aa2d78d5d8ed455580" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<ref refid="get__next__line_8c_1aed7a5e18848da190b01eb9e791c51824" kindref="member">get_next_line</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>fd)</highlight></codeline>
<codeline lineno="50"><highlight class="normal">{</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/><sp/><sp/>*str<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/>i<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>j;</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tmp;</highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/>str<sp/>=<sp/><ref refid="get__next__line_8c_1ab044b91a346486fe462ea0d5543325e5" kindref="member">my_read</ref>(fd,<sp/>str);</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(str<sp/>!=<sp/>NULL<sp/>&amp;&amp;<sp/>i<sp/>&gt;<sp/>0<sp/>&amp;&amp;<sp/>str[i<sp/>-<sp/>1]<sp/>==<sp/></highlight><highlight class="charliteral">&apos;\0&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(NULL);</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/>j<sp/>=<sp/>i;</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(str[j]<sp/>!=<sp/></highlight><highlight class="charliteral">&apos;\n&apos;</highlight><highlight class="normal"><sp/>&amp;&amp;<sp/>str[j]<sp/>!=<sp/></highlight><highlight class="charliteral">&apos;\0&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/>j++;</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(str[j]<sp/>==<sp/></highlight><highlight class="charliteral">&apos;\n&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(<ref refid="get__next__line_8c_1a43354ef027ff107d540fe9cd7b0aed1b" kindref="member">new_str</ref>(str,<sp/>&amp;i,<sp/>j));</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/>tmp<sp/>=<sp/><ref refid="my__strlen_8c_1ac7e9bd08d068851e31a5b6d408004638" kindref="member">my_strlen</ref>(str);</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((str<sp/>=<sp/><ref refid="get__next__line_8c_1ab044b91a346486fe462ea0d5543325e5" kindref="member">my_read</ref>(fd,<sp/>str))<sp/>==<sp/>NULL)</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(NULL);</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="my__strlen_8c_1ac7e9bd08d068851e31a5b6d408004638" kindref="member">my_strlen</ref>(str)<sp/>==<sp/>tmp)</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(<ref refid="get__next__line_8c_1a43354ef027ff107d540fe9cd7b0aed1b" kindref="member">new_str</ref>(str,<sp/>&amp;i,<sp/>j));</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(<ref refid="get__next__line_8c_1aed7a5e18848da190b01eb9e791c51824" kindref="member">get_next_line</ref>(fd));</highlight></codeline>
<codeline lineno="70"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="/home/geiger_a/rendu/PSU_2014_42sh/lib/my/get_next_line.c"/>
  </compounddef>
</doxygen>
