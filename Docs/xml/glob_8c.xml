<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.5">
  <compounddef id="glob_8c" kind="file">
    <compoundname>glob.c</compoundname>
    <includes local="no">stdlib.h</includes>
    <includes local="no">glob.h</includes>
    <includes local="no">string.h</includes>
    <includes refid="shell_8h" local="yes">shell.h</includes>
    <incdepgraph>
      <node id="539">
        <label>shell.h</label>
        <link refid="shell_8h"/>
      </node>
      <node id="537">
        <label>glob.h</label>
      </node>
      <node id="536">
        <label>stdlib.h</label>
      </node>
      <node id="538">
        <label>string.h</label>
      </node>
      <node id="535">
        <label>glob/glob.c</label>
        <link refid="glob.c"/>
        <childnode refid="536" relation="include">
        </childnode>
        <childnode refid="537" relation="include">
        </childnode>
        <childnode refid="538" relation="include">
        </childnode>
        <childnode refid="539" relation="include">
        </childnode>
      </node>
    </incdepgraph>
      <sectiondef kind="func">
      <memberdef kind="function" id="glob_8c_1aa5f409adaf658e07a17ffc0097496455" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>static int length_double_array</definition>
        <argsstring>(char **tab)</argsstring>
        <name>length_double_array</name>
        <param>
          <type>char **</type>
          <declname>tab</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/geiger_a/rendu/PSU_2014_42sh/glob/glob.c" line="16" column="1" bodyfile="/home/geiger_a/rendu/PSU_2014_42sh/glob/glob.c" bodystart="16" bodyend="24"/>
      </memberdef>
      <memberdef kind="function" id="glob_8c_1a79f692f042cb5e15d048e2661729c98f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>char **</type>
        <definition>char** return_globing</definition>
        <argsstring>(char *stars)</argsstring>
        <name>return_globing</name>
        <param>
          <type>char *</type>
          <declname>stars</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/geiger_a/rendu/PSU_2014_42sh/glob/glob.c" line="26" column="1" bodyfile="/home/geiger_a/rendu/PSU_2014_42sh/glob/glob.c" bodystart="26" bodyend="33"/>
        <referencedby refid="shell_8h_1a61bdc6973b469d94f62b412506a86a60" compoundref="stars_8c" startline="29" endline="43">if_stars</referencedby>
      </memberdef>
      <memberdef kind="function" id="glob_8c_1a94ce754d4547c963ce172dcbd9a8a6fe" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>static int length_malloc_globing</definition>
        <argsstring>(char **str)</argsstring>
        <name>length_malloc_globing</name>
        <param>
          <type>char **</type>
          <declname>str</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/geiger_a/rendu/PSU_2014_42sh/glob/glob.c" line="35" column="1" bodyfile="/home/geiger_a/rendu/PSU_2014_42sh/glob/glob.c" bodystart="35" bodyend="55"/>
      </memberdef>
      <memberdef kind="function" id="glob_8c_1a092c8d6d324b0991de7695be7c950f69" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>char **</type>
        <definition>char** parsing_globing</definition>
        <argsstring>(char **str)</argsstring>
        <name>parsing_globing</name>
        <param>
          <type>char **</type>
          <declname>str</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/geiger_a/rendu/PSU_2014_42sh/glob/glob.c" line="57" column="1" bodyfile="/home/geiger_a/rendu/PSU_2014_42sh/glob/glob.c" bodystart="57" bodyend="83"/>
        <references refid="stars_8c_1a73cefecfa75f18a7430e6b756214752d" compoundref="stars_8c" startline="14" endline="27">is_stars</references>
        <references refid="stars_8c_1a5b6eb307c8f5f55efe7af56ea79a4c78" compoundref="stars_8c" startline="29" endline="43">if_stars</references>
        <referencedby refid="shell_8h_1aaa570cbabecdb1a23f82ad57ed563378" compoundref="exe__cmd_8c" startline="103" endline="127">exe_cmd</referencedby>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment">**<sp/>glob.c<sp/>for<sp/>glob<sp/>in<sp/>/home/dubosc_a/rendu/PSU_2014_42sh/glob</highlight></codeline>
<codeline lineno="3"><highlight class="comment">**<sp/></highlight></codeline>
<codeline lineno="4"><highlight class="comment">**<sp/>Made<sp/>by<sp/>Valentin<sp/>Duboscq</highlight></codeline>
<codeline lineno="5"><highlight class="comment">**<sp/>Login<sp/><sp/><sp/>&lt;dubosc_a@epitech.net&gt;</highlight></codeline>
<codeline lineno="6"><highlight class="comment">**<sp/></highlight></codeline>
<codeline lineno="7"><highlight class="comment">**<sp/>Started<sp/>on<sp/><sp/>Tue<sp/>Apr<sp/>21<sp/>16:00:38<sp/>2015<sp/>Valentin<sp/>Duboscq</highlight></codeline>
<codeline lineno="8"><highlight class="comment">**<sp/>Last<sp/>update<sp/>Fri<sp/>May<sp/>22<sp/>13:51:08<sp/>2015<sp/>Valentin<sp/>Duboscq</highlight></codeline>
<codeline lineno="9"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdlib.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;glob.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;string.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="shell_8h" kindref="compound">shell.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/>length_double_array(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>**tab)</highlight></codeline>
<codeline lineno="17"><highlight class="normal">{</highlight></codeline>
<codeline lineno="18"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/>i;</highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/>i<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(tab[i])</highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/><sp/><sp/>i++;</highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(i);</highlight></codeline>
<codeline lineno="24"><highlight class="normal">}</highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight></codeline>
<codeline lineno="26" refid="shell_8h_1a9d453b40894496133ee7954e9ef68279" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/><sp/><sp/><sp/>**<ref refid="glob_8c_1a79f692f042cb5e15d048e2661729c98f" kindref="member">return_globing</ref>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*stars)</highlight></codeline>
<codeline lineno="27"><highlight class="normal">{</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/>glob_t<sp/><sp/><sp/><sp/>globbuf;</highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/>globbuf.gl_offs<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/>glob(stars,<sp/>GLOB_DOOFFS,<sp/>NULL,<sp/>&amp;globbuf);</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(globbuf.gl_pathv);</highlight></codeline>
<codeline lineno="33"><highlight class="normal">}</highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/>length_malloc_globing(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>**str)</highlight></codeline>
<codeline lineno="36"><highlight class="normal">{</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/>i;</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/>cpt;</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/><sp/>**tmp;</highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/>i<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/>cpt<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(str[i])</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="stars_8c_1a73cefecfa75f18a7430e6b756214752d" kindref="member">is_stars</ref>(str[i])<sp/>==<sp/>1)</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>tmp<sp/>=<sp/><ref refid="glob_8c_1a79f692f042cb5e15d048e2661729c98f" kindref="member">return_globing</ref>(str[i]);</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>cpt<sp/>+=<sp/>length_double_array(tmp);</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/>cpt++;</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>i++;</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(cpt);</highlight></codeline>
<codeline lineno="55"><highlight class="normal">}</highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight></codeline>
<codeline lineno="57" refid="shell_8h_1aaaecb53bea2c752a15fb72f27bdb85c4" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/><sp/><sp/><sp/>**<ref refid="glob_8c_1a092c8d6d324b0991de7695be7c950f69" kindref="member">parsing_globing</ref>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>**str)</highlight></codeline>
<codeline lineno="58"><highlight class="normal">{</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/>i;</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/>k;</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/><sp/>**res;</highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/>i<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/>k<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(strcmp(str[0],<sp/></highlight><highlight class="stringliteral">&quot;unsetenv&quot;</highlight><highlight class="normal">)<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(str);</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((res<sp/>=<sp/>malloc(</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*)</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>(length_malloc_globing(str)<sp/>+<sp/>1)))<sp/>==<sp/>NULL)</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(NULL);</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/>res[length_malloc_globing(str)]<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(str[i])</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="stars_8c_1a73cefecfa75f18a7430e6b756214752d" kindref="member">is_stars</ref>(str[i])<sp/>==<sp/>1)</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/>k<sp/>=<sp/><ref refid="stars_8c_1a5b6eb307c8f5f55efe7af56ea79a4c78" kindref="member">if_stars</ref>(res,<sp/>str,<sp/>i,<sp/>k);</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>res[k]<sp/>=<sp/>str[i];</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>k++;</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>i++;</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(res);</highlight></codeline>
<codeline lineno="83"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="/home/geiger_a/rendu/PSU_2014_42sh/glob/glob.c"/>
  </compounddef>
</doxygen>
